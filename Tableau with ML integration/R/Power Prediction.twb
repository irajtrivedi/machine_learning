<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10300.17.0515.2100                               -->
<workbook original-version='10.3' source-build='10.3.0 (10300.17.0515.2100)' source-platform='win' version='10.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.3'>
      <aliases enabled='yes' />
      <column caption='Ex Rate' datatype='real' name='[Parameter 10]' param-domain-type='any' role='measure' type='quantitative' value='64.0'>
        <calculation class='tableau' formula='64.0' />
      </column>
      <column caption='Power Qty' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='16.763695145153498'>
        <calculation class='tableau' formula='16.763695145153498' />
      </column>
      <column caption='Fuel Quantity' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='11.59821839'>
        <calculation class='tableau' formula='11.59821839' />
      </column>
      <column caption='Heatrate' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='7.2723597829999997'>
        <calculation class='tableau' formula='7.2723597829999997' />
      </column>
      <column caption='MWLoad' datatype='real' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='3.276688654'>
        <calculation class='tableau' formula='3.276688654' />
      </column>
      <column caption='Power Rate' datatype='real' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='16.76369515'>
        <calculation class='tableau' formula='16.76369515' />
      </column>
      <column caption='Rate' datatype='real' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='2.0'>
        <calculation class='tableau' formula='2.0' />
      </column>
      <column caption='Month' datatype='integer' name='[Parameter 7]' param-domain-type='any' role='measure' type='quantitative' value='4'>
        <calculation class='tableau' formula='4' />
      </column>
      <column caption='PLANTSITE' datatype='string' name='[Parameter 8]' param-domain-type='any' role='measure' type='nominal' value='&quot;GJ03&quot;'>
        <calculation class='tableau' formula='&quot;GJ03&quot;' />
      </column>
      <column caption='EQUIPMENTTYPE' datatype='string' name='[Parameter 9]' param-domain-type='any' role='measure' type='nominal' value='&quot;GT2&quot;'>
        <calculation class='tableau' formula='&quot;GT2&quot;' />
      </column>
    </datasource>
    <datasource caption='RF' inline='true' name='federated.0e1xgty1rcwsu61435d9h0xo2g1e' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='RF' name='textscan.0qp1hb41xm0dk8140v18213a0w2t'>
            <connection class='textscan' directory='C:/Users/raj.d.trivedi/Desktop' filename='RF.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0qp1hb41xm0dk8140v18213a0w2t' name='RF.csv' table='[RF#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='datapoint' ordinal='0' />
            <column datatype='string' name='ZZPLANT' ordinal='1' />
            <column datatype='string' name='PLANT_SITE' ordinal='2' />
            <column datatype='string' name='EQUIPMENT_TYPE' ordinal='3' />
            <column datatype='integer' name='day_month' ordinal='4' />
            <column datatype='real' name='log_fuelamt' ordinal='5' />
            <column datatype='real' name='log_fuelqty' ordinal='6' />
            <column datatype='real' name='log_powerqty' ordinal='7' />
            <column datatype='real' name='log_heatrate' ordinal='8' />
            <column datatype='real' name='log_MWload' ordinal='9' />
            <column datatype='real' name='log_Rate' ordinal='10' />
            <column datatype='real' name='actual' ordinal='11' />
            <column datatype='real' name='predicted' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>datapoint</remote-name>
            <remote-type>20</remote-type>
            <local-name>[datapoint]</local-name>
            <parent-name>[RF.csv]</parent-name>
            <remote-alias>datapoint</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZZPLANT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ZZPLANT]</local-name>
            <parent-name>[RF.csv]</parent-name>
            <remote-alias>ZZPLANT</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PLANT_SITE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PLANT_SITE]</local-name>
            <parent-name>[RF.csv]</parent-name>
            <remote-alias>PLANT_SITE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EQUIPMENT_TYPE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[EQUIPMENT_TYPE]</local-name>
            <parent-name>[RF.csv]</parent-name>
            <remote-alias>EQUIPMENT_TYPE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day_month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[day_month]</local-name>
            <parent-name>[RF.csv]</parent-name>
            <remote-alias>day_month</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>log_fuelamt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[log_fuelamt]</local-name>
            <parent-name>[RF.csv]</parent-name>
            <remote-alias>log_fuelamt</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>log_fuelqty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[log_fuelqty]</local-name>
            <parent-name>[RF.csv]</parent-name>
            <remote-alias>log_fuelqty</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>log_powerqty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[log_powerqty]</local-name>
            <parent-name>[RF.csv]</parent-name>
            <remote-alias>log_powerqty</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>log_heatrate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[log_heatrate]</local-name>
            <parent-name>[RF.csv]</parent-name>
            <remote-alias>log_heatrate</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>log_MWload</remote-name>
            <remote-type>5</remote-type>
            <local-name>[log_MWload]</local-name>
            <parent-name>[RF.csv]</parent-name>
            <remote-alias>log_MWload</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>log_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[log_Rate]</local-name>
            <parent-name>[RF.csv]</parent-name>
            <remote-alias>log_Rate</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[actual]</local-name>
            <parent-name>[RF.csv]</parent-name>
            <remote-alias>actual</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>predicted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[predicted]</local-name>
            <parent-name>[RF.csv]</parent-name>
            <remote-alias>predicted</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[RF.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Predicted new' datatype='real' name='[Calculation_578994047690379264]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;load(&apos;C:/Users/raj.d.trivedi/Desktop/Raj/ML_TABPY/R/POWER_DATA/model.rda&apos;);&#13;&#10;t(data.frame(predict(model,newdata = data.frame(logfuelamt = as.numeric(.arg2), logfuelqty = as.numeric(.arg3), logpowerqty = as.numeric(.arg4),&#13;&#10;                                                logheatrate = as.numeric(.arg5), logMWload = as.numeric(.arg6), logRate = as.numeric(.arg7)))))[1,];&#13;&#10;&quot;,SUM([log_fuelamt]),SUM([log_fuelqty]), SUM([log_powerqty]), SUM([log_heatrate]), SUM([log_MWload]), SUM([log_Rate]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Equipment Type' datatype='string' name='[EQUIPMENT_TYPE]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Plant Site' datatype='string' name='[PLANT_SITE]' role='dimension' type='nominal' />
      <column datatype='real' name='[Predicted new (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;require(&apos;randomForest&apos;)&#13;&#10;load(&apos;C:/Users/raj.d.trivedi/Desktop/Raj/ML_TABPY/R/POWER_DATA/model.rda&apos;);&#13;&#10;PLANTSITE &lt;- c(&apos;GJ01&apos;, &apos;GJ02&apos;, &apos;GJ03&apos;, &apos;GJ04&apos;, &apos;GJ05&apos;, &apos;MH01&apos;, &apos;MH02&apos;)&#13;&#10;EQUIP &lt;- c(&apos;C2GT1&apos;, &apos;C2GT2&apos;,   &apos;FRAME5&apos;,  &apos;FRAME6&apos;, &apos;FRAME6A&apos;, &apos;FRAME6B&apos;, &apos;GT1&apos;, &apos;GT10&apos;, &apos;GT2&apos;, &apos;GT3&apos;,&apos;GT4&apos;,&apos;GT5&apos;,&apos;GT6&apos;,&apos;GT7&apos;)&#13;&#10;&#13;&#10;test_data &lt;- data.frame(PLANTSITE = as.factor(.arg1), EQUIPMENTTYPE = as.factor(.arg2), exrt = as.numeric(.arg3), logpowerqty = as.numeric(.arg4), daymonth = as.numeric(.arg5), logfuelqty = as.numeric(.arg6),&#13;&#10;                                                                       logheatrate = as.numeric(.arg7), logMWload = as.numeric(.arg8), logRate = as.numeric(.arg9))&#13;&#10;&#13;&#10;levels(test_data$PLANTSITE) &lt;- PLANTSITE&#13;&#10;levels(test_data$EQUIPMENTTYPE) &lt;- EQUIP&#13;&#10;t(data.frame(predict(fit,newdata = test_data)))[1,];&#13;&#10;&quot;,[Parameters].[Parameter 8], [Parameters].[Parameter 9], [Parameters].[Parameter 10], [Parameters].[Parameter 1], [Parameters].[Parameter 7], [Parameters].[Parameter 2], [Parameters].[Parameter 3], [Parameters].[Parameter 4], [Parameters].[Parameter 6])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Zzplant' datatype='string' name='[ZZPLANT]' role='dimension' type='nominal' />
      <column caption='Actual' datatype='real' name='[actual]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[datapoint]' role='dimension' type='ordinal' />
      <column caption='Day Month' datatype='integer' name='[day_month]' role='dimension' type='quantitative' />
      <column caption='log MWload' datatype='real' name='[log_MWload]' role='measure' type='quantitative' />
      <column caption='log Rate' datatype='real' name='[log_Rate]' role='measure' type='quantitative' />
      <column caption='Log Fuelamt' datatype='real' name='[log_fuelamt]' role='measure' type='quantitative' />
      <column caption='Log Fuelqty' datatype='real' name='[log_fuelqty]' role='measure' type='quantitative' />
      <column caption='Log Heatrate' datatype='real' name='[log_heatrate]' role='measure' type='quantitative' />
      <column caption='Log Powerqty' datatype='real' name='[log_powerqty]' role='measure' type='quantitative' />
      <column caption='Predicted' datatype='real' name='[predicted]' role='measure' type='quantitative' />
      <column-instance column='[actual]' derivation='Sum' name='[sum:actual:qk]' pivot='key' type='quantitative' />
      <column-instance column='[predicted]' derivation='Sum' name='[sum:predicted:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_578994047690379264]' derivation='User' name='[usr:Calculation_578994047690379264:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <layout dim-ordering='alphabetic' dim-percentage='0.276316' measure-ordering='alphabetic' measure-percentage='0.552632' parameter-percentage='0.171053' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0e1xgty1rcwsu61435d9h0xo2g1e].[sum:actual:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0e1xgty1rcwsu61435d9h0xo2g1e].[usr:Calculation_578994047690379264:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0e1xgty1rcwsu61435d9h0xo2g1e].[sum:predicted:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Ex Rate' datatype='real' name='[Parameter 10]' param-domain-type='any' role='measure' type='quantitative' value='64.0'>
          <calculation class='tableau' formula='64.0' />
        </column>
        <column caption='Power Qty' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='16.763695145153498'>
          <calculation class='tableau' formula='16.763695145153498' />
        </column>
        <column caption='Fuel Quantity' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='11.59821839'>
          <calculation class='tableau' formula='11.59821839' />
        </column>
        <column caption='Heatrate' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='7.2723597829999997'>
          <calculation class='tableau' formula='7.2723597829999997' />
        </column>
        <column caption='MWLoad' datatype='real' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='3.276688654'>
          <calculation class='tableau' formula='3.276688654' />
        </column>
        <column caption='Rate' datatype='real' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='2.0'>
          <calculation class='tableau' formula='2.0' />
        </column>
        <column caption='Month' datatype='integer' name='[Parameter 7]' param-domain-type='any' role='measure' type='quantitative' value='4'>
          <calculation class='tableau' formula='4' />
        </column>
        <column caption='PLANTSITE' datatype='string' name='[Parameter 8]' param-domain-type='any' role='measure' type='nominal' value='&quot;GJ03&quot;'>
          <calculation class='tableau' formula='&quot;GJ03&quot;' />
        </column>
        <column caption='EQUIPMENTTYPE' datatype='string' name='[Parameter 9]' param-domain-type='any' role='measure' type='nominal' value='&quot;GT2&quot;'>
          <calculation class='tableau' formula='&quot;GT2&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='RF' name='federated.0e1xgty1rcwsu61435d9h0xo2g1e' />
          </datasources>
          <datasource-dependencies datasource='federated.0e1xgty1rcwsu61435d9h0xo2g1e'>
            <column caption='Predicted new' datatype='real' name='[Calculation_578994047690379264]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;load(&apos;C:/Users/raj.d.trivedi/Desktop/Raj/ML_TABPY/R/POWER_DATA/model.rda&apos;);&#13;&#10;t(data.frame(predict(model,newdata = data.frame(logfuelamt = as.numeric(.arg2), logfuelqty = as.numeric(.arg3), logpowerqty = as.numeric(.arg4),&#13;&#10;                                                logheatrate = as.numeric(.arg5), logMWload = as.numeric(.arg6), logRate = as.numeric(.arg7)))))[1,];&#13;&#10;&quot;,SUM([log_fuelamt]),SUM([log_fuelqty]), SUM([log_powerqty]), SUM([log_heatrate]), SUM([log_MWload]), SUM([log_Rate]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Actual' datatype='real' name='[actual]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[datapoint]' role='dimension' type='ordinal' />
            <column caption='log MWload' datatype='real' name='[log_MWload]' role='measure' type='quantitative' />
            <column caption='log Rate' datatype='real' name='[log_Rate]' role='measure' type='quantitative' />
            <column caption='Log Fuelamt' datatype='real' name='[log_fuelamt]' role='measure' type='quantitative' />
            <column caption='Log Fuelqty' datatype='real' name='[log_fuelqty]' role='measure' type='quantitative' />
            <column caption='Log Heatrate' datatype='real' name='[log_heatrate]' role='measure' type='quantitative' />
            <column caption='Log Powerqty' datatype='real' name='[log_powerqty]' role='measure' type='quantitative' />
            <column-instance column='[datapoint]' derivation='None' name='[none:datapoint:ok]' pivot='key' type='ordinal' />
            <column caption='Predicted' datatype='real' name='[predicted]' role='measure' type='quantitative' />
            <column-instance column='[actual]' derivation='Sum' name='[sum:actual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[predicted]' derivation='Sum' name='[sum:predicted:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_578994047690379264]' derivation='User' name='[usr:Calculation_578994047690379264:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0e1xgty1rcwsu61435d9h0xo2g1e].[sum:actual:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0e1xgty1rcwsu61435d9h0xo2g1e].[sum:predicted:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0e1xgty1rcwsu61435d9h0xo2g1e].[usr:Calculation_578994047690379264:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>([federated.0e1xgty1rcwsu61435d9h0xo2g1e].[sum:actual:qk] + ([federated.0e1xgty1rcwsu61435d9h0xo2g1e].[sum:predicted:qk] + [federated.0e1xgty1rcwsu61435d9h0xo2g1e].[usr:Calculation_578994047690379264:qk]))</rows>
        <cols>[federated.0e1xgty1rcwsu61435d9h0xo2g1e].[none:datapoint:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='RF' name='federated.0e1xgty1rcwsu61435d9h0xo2g1e' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Ex Rate' datatype='real' name='[Parameter 10]' param-domain-type='any' role='measure' type='quantitative' value='64.0'>
              <calculation class='tableau' formula='64.0' />
            </column>
            <column caption='Power Qty' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='16.763695145153498'>
              <calculation class='tableau' formula='16.763695145153498' />
            </column>
            <column caption='Fuel Quantity' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='11.59821839'>
              <calculation class='tableau' formula='11.59821839' />
            </column>
            <column caption='Heatrate' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='7.2723597829999997'>
              <calculation class='tableau' formula='7.2723597829999997' />
            </column>
            <column caption='MWLoad' datatype='real' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='3.276688654'>
              <calculation class='tableau' formula='3.276688654' />
            </column>
            <column caption='Power Rate' datatype='real' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='16.76369515'>
              <calculation class='tableau' formula='16.76369515' />
            </column>
            <column caption='Rate' datatype='real' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='2.0'>
              <calculation class='tableau' formula='2.0' />
            </column>
            <column caption='Month' datatype='integer' name='[Parameter 7]' param-domain-type='any' role='measure' type='quantitative' value='4'>
              <calculation class='tableau' formula='4' />
            </column>
            <column caption='PLANTSITE' datatype='string' name='[Parameter 8]' param-domain-type='any' role='measure' type='nominal' value='&quot;GJ03&quot;'>
              <calculation class='tableau' formula='&quot;GJ03&quot;' />
            </column>
            <column caption='EQUIPMENTTYPE' datatype='string' name='[Parameter 9]' param-domain-type='any' role='measure' type='nominal' value='&quot;GT2&quot;'>
              <calculation class='tableau' formula='&quot;GT2&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0e1xgty1rcwsu61435d9h0xo2g1e'>
            <column datatype='real' name='[Predicted new (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;require(&apos;randomForest&apos;)&#13;&#10;load(&apos;C:/Users/raj.d.trivedi/Desktop/Raj/ML_TABPY/R/POWER_DATA/model.rda&apos;);&#13;&#10;PLANTSITE &lt;- c(&apos;GJ01&apos;, &apos;GJ02&apos;, &apos;GJ03&apos;, &apos;GJ04&apos;, &apos;GJ05&apos;, &apos;MH01&apos;, &apos;MH02&apos;)&#13;&#10;EQUIP &lt;- c(&apos;C2GT1&apos;, &apos;C2GT2&apos;,   &apos;FRAME5&apos;,  &apos;FRAME6&apos;, &apos;FRAME6A&apos;, &apos;FRAME6B&apos;, &apos;GT1&apos;, &apos;GT10&apos;, &apos;GT2&apos;, &apos;GT3&apos;,&apos;GT4&apos;,&apos;GT5&apos;,&apos;GT6&apos;,&apos;GT7&apos;)&#13;&#10;&#13;&#10;test_data &lt;- data.frame(PLANTSITE = as.factor(.arg1), EQUIPMENTTYPE = as.factor(.arg2), exrt = as.numeric(.arg3), logpowerqty = as.numeric(.arg4), daymonth = as.numeric(.arg5), logfuelqty = as.numeric(.arg6),&#13;&#10;                                                                       logheatrate = as.numeric(.arg7), logMWload = as.numeric(.arg8), logRate = as.numeric(.arg9))&#13;&#10;&#13;&#10;levels(test_data$PLANTSITE) &lt;- PLANTSITE&#13;&#10;levels(test_data$EQUIPMENTTYPE) &lt;- EQUIP&#13;&#10;t(data.frame(predict(fit,newdata = test_data)))[1,];&#13;&#10;&quot;,[Parameters].[Parameter 8], [Parameters].[Parameter 9], [Parameters].[Parameter 10], [Parameters].[Parameter 1], [Parameters].[Parameter 7], [Parameters].[Parameter 2], [Parameters].[Parameter 3], [Parameters].[Parameter 4], [Parameters].[Parameter 6])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Predicted new (copy)]' derivation='User' name='[usr:Predicted new (copy):qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e1xgty1rcwsu61435d9h0xo2g1e].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Parameters].[Parameter 2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Parameters].[Parameter 3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Parameters].[Parameter 4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Parameters].[Parameter 1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Parameters].[Parameter 6]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0e1xgty1rcwsu61435d9h0xo2g1e].[usr:Predicted new (copy):qk:3]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0e1xgty1rcwsu61435d9h0xo2g1e].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[Parameters].[Parameter 2]&quot;</bucket>
              <bucket>&quot;[Parameters].[Parameter 3]&quot;</bucket>
              <bucket>&quot;[Parameters].[Parameter 4]&quot;</bucket>
              <bucket>&quot;[Parameters].[Parameter 1]&quot;</bucket>
              <bucket>&quot;[Parameters].[Parameter 5]&quot;</bucket>
              <bucket>&quot;[Parameters].[Parameter 6]&quot;</bucket>
              <bucket>&quot;[federated.0e1xgty1rcwsu61435d9h0xo2g1e].[usr:Predicted new (copy):qk:3]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.0e1xgty1rcwsu61435d9h0xo2g1e].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0e1xgty1rcwsu61435d9h0xo2g1e].[Multiple Values]' value='n#,##0.0000;-#,##0.0000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0e1xgty1rcwsu61435d9h0xo2g1e].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e1xgty1rcwsu61435d9h0xo2g1e].[:Measure Names]</rows>
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 7]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 3]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 4]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 5]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 6]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0e1xgty1rcwsu61435d9h0xo2g1e].[:Measure Names]</field>
            <field>[federated.0e1xgty1rcwsu61435d9h0xo2g1e].[none:PLANT_SITE:nk]</field>
            <field>[federated.0e1xgty1rcwsu61435d9h0xo2g1e].[none:datapoint:ok]</field>
            <field>[federated.0e1xgty1rcwsu61435d9h0xo2g1e].[none:day_month:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
          <strip size='2147483647'>
            <card mode='type_in' param='[Parameters].[Parameter 3]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
          <strip size='2147483647'>
            <card mode='type_in' param='[Parameters].[Parameter 6]' type='parameter' />
          </strip>
          <strip size='2147483647'>
            <card mode='type_in' param='[Parameters].[Parameter 7]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 8]' type='parameter' />
          </strip>
          <strip size='2147483647'>
            <card mode='type_in' param='[Parameters].[Parameter 9]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 10]' type='parameter' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      Ra8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='124' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAB8CAYAAAA/1L8JAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAcFklEQVR4nO2de1hVxd7HP7XzAqSmkKSUmoV4QULYioKsDuDZCaJ4ITEgDdHUzCDvwrEI
      EzXzllre0DCl7EivEIaZim6RFBCIkKspYL4Bib5hgpj78P6xNldFPAHe9nyeh+dhz8ya+a29
      12/mN7PWrO9jlZWVlQgEOsrj99sAgeB+IhxAoNMIBxDoNMIBBDqNcACBTiMcQKDTCAcQ6DRP
      NFYgKSnpXtghENwXHhM3wgS6jAiBBDqNcACBTiMcQKDTCAcQPBJoyvI4HhaCn7sjQep6mRXF
      nInaxNzJKnzD8utkNcEB8gnzUqJU1v4Lon7b/1WNYV4ob7FepjQtjHnujgxRKhni6M68sDRK
      m9CW4FEin68CQjjd1ZNlb0m35KpX+bGn3Jr5i7x4rl5ek0cA19VJJCVV/QVxa/PNQP5uZk0L
      57GJYRxNSuJo2EQeC5/GrN35jR/bBNRBSrzq9Rj5YV4ovcKQU+VOoAGfFdwzuuO1dgv+/+yB
      /m0W9qWALwn2GEjn1rfmPRQh0Omvt5NjP4f3Rz1HG6DNc6NYtsSNX7d/SYLm3trSfdJuknZP
      ovu9bVbQQrSMA6iD6oYydT6XkrD2dRyHKFEq7RkzL4Jzd7yI80lP/QNbBzsMaqUq+r2E5R8/
      k/krgJqgOuFX3c/ZOyYzwnEISm349P7BolrlPFi6PYTJKnuUyiGM8I8iX9uzz46G7PXj5PBO
      a39NmKYmSDmO9dkQPVsOAb3CfiFj41iUMyIoqTKlJIIZQ+YQI+K1B5ImO0DVj69UKmuFBg1T
      FLGAVRVvsTcuiaRTkcwy2MLcbTl3OOI65eXQzsCgbrKBAe3I5nyjUdB12lrPITQ6jqSkJI6u
      tiX5/S3EV+eXUd51POu+Pc6pg/N5MW4PR/O7M2l3EqtdwWxWhBzeBdUP7iSCkiKYZVYTBu6e
      9AJ93T2wTIzhkNbHSo4eIvUVN1TtG7NTcD9o9FGIxnBdncQt10aDXCM5PpFfjiWi+nftSgqB
      Xg0c0xY9Pbh67RrUHgOuXeMqZlg0Gou0ovWlSALmTiftcnlVg9yszm+PaZ8XadcGaGNIx7s9
      lYYwdmWi6xbW7svBY5ohRw/l4OZjh6Kp9QpahCY7wN/Bct5+tnkY32Xp7phbdmBT7AmuOauq
      XUBz5idSO1ji2ZgDlOwjeP4ZBu/8nq199VHkh+E17nwTrG8MAyTP8axdGEvO6KeIKRrP/EHi
      8n9QablJ8K+/clEDFcVniDqSpk00wGqQJanbVxF1oQKAiqtnOZ545zjGevxkeh1fxQdRF6gA
      Ki5EsWhxJM9OHo91TYP8KjfImagjVLXI9euUYcTTz7RBUVHMmfg0Cu/yFAwMOlCYk8NlDWg0
      t5uoPMmT7SE3K5cKapXpNRqPTl/z2fIfwGN0g2OboLlQE1QVhs+OrgnLg9TUWa4ft57oqjmd
      NlxvmRHA0pGxawJxs/mMThbOzHPoBb/IWcbuS/jol0CWe9oRXA56nSxwmPM+9neqr7sX6zff
      ZEnwJP4RXAqtWvFX1zF8NrKq+7fEcewaAt1s+KyTBc7zHOhV1aDJSHzH7iVQZcPq5wYxbqQJ
      Rvx1V6dhPd4PK/9gVDaL0Bu7keMBNvVKGDJ8yiT2zZuI3RZ4ad5eQj1MAGNcx1uzNuAy/gvv
      dqQT/H0kgpKSCGogd9LuJCY1kPeQPg1aijroVRYkDmXpFwE4dnrQQowKcre/yeQsLw58pMKg
      8QME94mH1AEeYPLD8Bq3ngJTb1Zt9meQWP15oBEOINBpHoo7wQJBSyEcQKDTNLoKVFZWdi/s
      EAjuC2IEEOg0wgEEOo1wAIFOIxxAoNPcl4fhBIJ7RlwIUsCBW5L7zPyKzR5dG78R1vAqUAHh
      vt7k+agJGFo37bDTLkI9uzXNcIGgRSgjLiSYoinLGdf5AQ2B4kIkfMMLmlRHQbgvUkhcM1kk
      eGQojiG6rTujO8sfH0gHEAhaBg0pXx6h10hl9QallnUATR5RgRNQSRKSkwtTNyZVv8okZ9cM
      xrk4IUkSTi7eLD30O3IIJRFwAHI3eSNJkrYXl9ND4kpJ2uiDSgohDig5ugwfN5VcTuXG7J1Z
      lCGPIN6bcuFAgJznG05BI/YIdIDSw3zzf2OYYFqT1OQ5wKbcW3NMp+8i1NOElHUe7Oy6jhWv
      mtD6xll2znqL3Ff3sWTY4xSkn6fNC70w1lNwI2093u+WM/vwfAYjX8A7etSeR2jnFk8MwUg1
      maDRZugpoCQrjT9MetOzXWs0V75lkVs01l9txqOrHAJ55/mgrp6gaO5gj/5/+1UKHkJyt8/k
      uwGf4Deg5vH5Jq8CDQ+5zSRYbo7EE8WcLnyNYetrypsWXwJMaF2yn6BAP85cuV5VU619ug1g
      N4OQcT2qh69WN9MJnbGQkwV/are4mGLZYCV3skdM2B95yuL4d44jUybX3TvSwsug7Rm9OpLZ
      ynobVkqiWL44k4FbI9lgpoeiIBxf77xGa3uhZ49am8tT2LEwnDZ+O4n5pxGtiSNE2vH37BE8
      8hTHRNPWfSmd66W34BzAFKvBsH9rKGlXNICG8qJMErJKoKKccgx5unNrFDcukXkqnaJaRxoY
      tKfo7FmuNLgXF6CCinJ9Ohq3p7WmnPz4hKpNkHIdT7aDX3I4ewPQaNDcyR7Bo40miV0HezHy
      Nh1fCzqAAuWU5fgaqVno7oAkqRg3ZwsZ5XrQ1ZnXRxWw3s0B1cSlHCnviFGtIweMmcFLGctx
      c5BwXpPSQP0DGf9mF2LeHYbTyHf44re2GNbKNRw2Ca/H9zJtmITTO/soupM9gkcbhZLZmydj
      epusJkyCBYKHH3EfQKDTCAcQ6DTCAQQ6jXAAgU4jXosi0GnECCDQaYQDCHQa4QACnUY4gECn
      EQ4geMQpQr32LdxracTNizhH1RNmzaITPCfmWp2cazFz6ogQaNRBDBm5kYzqEufY7qFEOWk3
      F6uSNEcIVHoRlo/8huUmag7f0fI76BELHjGu/8b/dfFhbeRRWSMuMog+UYuokqVr8gjwiqsr
      CadOU/PMpobTp87j4+NanaLo1x/L39LJrHrw8lo2Z9o64ng5g+yqA7MzSetgibnQHxU0J20t
      GeUxkGfbtQGgTTtz/vFyO0qvytlNdoBWkiNOP54itTollVNpQxjcv1Yhwz6Yd0klI1v7OSud
      8+buDLdII1ObVpKZzm+W5vRuqkECQQNoygo5E7WE5WmjGK/V1mr6HOAJa2zM1Zysim8yTvKj
      hQ2WdQqZ0d8a0rPOAXAxK53nzfth1rcT5/Ll8Ck7I5V+VhaNqKmUkrB2Mir7Ko3hMNKqNvWW
      HOKDCSrslXKeamYoGVWRmeY3joRotYmHOOL/9d2qhAkeDWQNMRvJgxW5dry3YlS10HkzTIIN
      GGT7LPFaobv8xARetLWuJwuqoF9/S345k801NGRnXKefmQEmvc05n54FXOT8WX3Me5vcsaWi
      iAX4Jb7ER5GntBrD4Uz78CDydd4Vtw8jOJQk6w/PeOIzVuyTZxg522YSmO3AhsOnSPoxhqUj
      jO7UjOCRQ9YQSzoRTcjwP9kxawlqbcfZLKtAhsrBcDKJEkpIOmmEg92t/bhhH3O6pKaTRTaZ
      meb07gn0Nuf59CwuarLJOGOJ+R3jH1lj2NZ7CpadFKDohKOPJz2PxHMaoNVNftrsg/MQJUob
      FUtPwM2bN4F8flQX8IrvZPrqK4A2GBiIF+LpJG3a8Wy/USz21hD6rdw5Ns8yaPeB2P4aT0JR
      AvHYMuh2cYxZf6zLzpGXnUm6cV/MAAy60/NyBtlnMkl7oR9mTVCTO735XXa29uWro7Jq+2rX
      xo8R6ACpUWw+fpbLZfJqi6Ysj6joRIyffgpotvsAfRkspRP3WRyXBivrbE2sRtGP/papZERk
      UGTeR1vGjD4Waai/SadM+RI979iGAVa2A4nftY3UyxrQXObIjnDOOdpiDVRcL0PfsAsd2mgo
      yzvOj9Wva3mWPv07cPz7GIor5IlQ3q/ibUA6Q5cutP0hhAmv2KBUKhnqOpfj/ZbxL5Xc2zZb
      LGDtOIz509SM3dnQOqYhfcyNWLYjklc+CtCmKTDr24n5axJ5ecnH9cpHM1sZrf3fjFkRu5k0
      bgXrLvgz382Gy+V6POcwhc2LZRlSG6+3MZkyA7t/69Hnn9NQVof5Cga9tYyRMxfiZreYJ55z
      QNUTaNdcZy54oDEeyKTggY+aTrBA0DyIRyEEOo1wAIFOIxxAoNMIBxDoNEInWKDTiBFAoNMI
      BxDoNMIBBDqNcADBI4GmPJ/48JXM93bhVm1EDYXHPmaqixOS5ISL9zKOajdnNeFRiHoSSa2e
      xMzBj8BFr9DjQdCfKE0nfMVydp0s4E+epNtgbxYu8MS8/f02TND8FLA36GMuvTKXD6b+xZp6
      uZqUDbwd3p6AnTFYGSkoL/qVP7RvxW/yCDA8RI1arSY2eg32Fz7Cf9PPTa2yGShgzzw/vn7c
      k60xatQxW/F8/Gv85u2hWnw1LqRGPE/wkNMNjxXrmenYHb1bOt8yYr9JxmXum1gZtQYU6Bl3
      5xmtLFyzhUAKPTO8PF/mcvLP9/+iSvkfvjhry9uLXDBpDbQ2wSXoX4y4+AV7kxpSnBE8mmRz
      5ooTjrdTx6Al5wClSWyc4SZLkqomEBieLkuSlkThL/kTpY3BSqL8kaQ32JmnPS5lHa5VPXNp
      EhunuuBUVUdUnnbzfRwhki/heXlELXDHqV5PXpCZRqmNPba1xR8VfTG3KOVMzkVZRFvWYsVb
      kpCkEOI0WWzxkvCPqpFMKonyxyngoJBSfai5xjVNHpHveuPiJCFJKiYEhpPenDvCADTl2ewO
      P8ZzdgPpRjFR7y0guf8S9sSqid0zA4Ov/Vh5qAwM7XC0SiY1Xdbpykz/neHDnyI5Tb7wshJP
      YOw0VFvHeiqm7uagWlvH9kDCqp/zv8qxlas4P2oTMaGedXQer5eXwZP61BU/1Uf/ScjNK6Cb
      ZyjqkOFgOp1dajVqdQBDFb0ZPdaC5INHKQaghBNHfsbJxQkxbXjY6Yrj3M/Yd1iNOjaSFYPT
      WbotCQ3N4AAHAiQkScLBbT4/mr7HqkmmUJbKyWQbPN6woKMCFB1fxnt8D44lJAOGWA4yJSE1
      DUjj9M+DcPYexNWTpymjgORTYGPVTVvHefbNdcNBknBwW8yByxcorFbTK8Nk/FL87IxoXc+m
      tnr68GcZde9hl1H2J5j2aFgStbPzBIbnfUN0LlBygiNnR6Aa8iDM6AV/nz6YG5ZS8Uw7+TpR
      6NF9pAv9z+RwkWbXCb47ulnZoP9eIllubUnrb83b3YywKfqe7JLrJBTZMak3yFevBX57NzCu
      vrYlAMa8+Pzt++ZufSxoH3qc+DIV1RrYmgzS09pj8eodNIH1h/Lq2M8IOp6La4eD/D7WD6Go
      +rBjyD+kK/htOMHKGXYYKcrJ/+478u186EZLzQH0LRlsdYo9n6fJUqdXjrHr6zxeHmQl5/ce
      iF3ZKb6PTMZYaYWC3liYJRAbdpKzjnZYaOuwtkjji/XfcfEGwA2unovn9N3MsAeM4fUX49mw
      THvsjYt8F/Qh+01eZ8wAbRkDA9oXneWsrMVa/WIvU9exdPwmlNWxMNa1gZmT4AEjjhBJjkSk
      gAPVUYmkvSHQXjWPOU9/x9uuEpJqHIEnB7NokvzbttDrETozKngFFxYsxsPhCtfbdsX+jXUs
      qO6OLbC2zSMgogfTd8lpFpbdmf/hKYaHLNG+UqUzo/+1hPMfrMZn2HKu05aO/SRmLbK9i/a7
      4bFyHZoVy5nqvJw/aUWrv7rguta5Zq4wYAwzXprPcjcHgtqOYvXBuSgBOjszesCnBF95i9m3
      HXkEDx5DCVCrCWgwvz3mnkv5yvPWHJ2RSS2NC2Hi+8nYvreVOS93pMHI5sZZds56i9xX97Fk
      mH5DpQSPCDrjAHdDQbgv3psu8IJHCOtmKsXqjw4gHECg04iH4QQ6jXAAgU4j3gsk0GnECCDQ
      aYQDCHQa4QACnUY4gECnEQ4geOSpuPADIZO18ln2KmZuTqve49EsMqlKpay95T5vD7kVzWKz
      QNBMxLNq/knM5+ziUFISp77fwrCcIDaflnObPAK4rpYVWU4d3sDYP7cwfU0CjW86VBNUpQks
      ELQoNizYtZhR/TrTBlDo92DUiD5c0wooNt+eYP2+eL5mzx8nEsluvLhAcI9QoKj95GNpGpui
      DFA1m0xqg5Rw6IMJWklTJfaqmYRmXNOqwM8mmmzWj5PzqkTbSxPW8rpW0t5+zDwizokN7ILm
      QsPl1M3MXPQj9sEB2Fbp0VX+bfIqP/e0rnz/mPzpZklK5YaJgyvHbDhTebOysrKy8lLlmZTc
      ytLrlZWVlTcrS755p9J64q7KXysrKysrj1W+b+1Z+XlereoK91ZOH7+8Mr7kplz+8PuVqjGb
      KrP/voECgZbrlTmfz62c+/lPlX/Uy2nyhpjo2UqiAVq1p4/HKrZN76t91r4VN3/ajM/sOPJK
      /5ILm1lxs4F6riXHk/jLMRJV/66V6koh0KupRgp0mqKID/jquUUsd+x0yz6QJjuA6+okFj8b
      gf+MLeiZPU+HqhZOb+bdna2Z+9VRnDu3AXUQys2NVGY5j/3bPDBuqlECQTWn2Rn3Em+uufXi
      h2aaAyh6jmPtZxMpCXmDRTG/yatAFdcp0zekS4c2aMryOF6jWwoYYNChkJycy2jQoNGAgdUg
      LFO3syrqAhUAFVc5ezwRsVAkaBIXs0g/vpIRylpL9kolXtolyGbbE6zo6cWWsJtM9nqDJW2+
      ZPHLXrxtMoUZdv9Gr88/mVajWwpYM97PCv9gFTaL9Bi78TgBNu4s+egXApd7YhdcDnqdsHCY
      w/v2zWWhQCcx8SIsyavBbPE4tECnEY9CCHQa4QACnUY4gECnEQ4g0GmETKpApxEjgECnEQ4g
      0GmEAwh0GuEAAp1GOMADhYa88JnMDM+7i111zURpHCHu/kQV36sG7yMFe5jmJOEbXiMy0QQH
      KCDcVytEIElITi5M/fB78prll5PrvlXwuOUoCPetFlS4X2iyQgk8bMM8jx4Nv769uWk/FH//
      zmwPieK/9YEH4Tu7e0o5uOkIdpOG1Ul9KHSCC8J9G9f0LQjHVwrhYfk5bqWY/Zv20vM193su
      NK4/dAqv39zCrkdYQrb02Fq+670Ir551V/4fCp3gbp6hqOspQT5yFB/n4NnhuDncD1GOzjiP
      smB/ZCyP5F0fTQo7vn6G6V63jqwtNgeIC5HwDc8jL2oB7k6+hBcAmjyiAifI2sFOLkzdmFT9
      fhZN4TE+1moCO7nM55uimrrqDrUaCo99zFQXJyRJQjVhGUcPhCB5byKXAwRIEpKkbQ8NeVGB
      TFBJSJITLlM3klTTIMc+niprxzq5ML92gzUtE+4rMf/TcAK9ZdtUPptJ0V4lmrwoAieokCQJ
      J5epbNRWXhLlj+QfhSz8WkKUv4T0xk7ytLWmrHOtE4cClJw8TpqFOX1r/UKl6eF16t+VU3NO
      3i5O2nP6mGOFmqovCl9pFiFV56WawNKDhWgo5WCAE67rUmoqT1mHq9cWsrSH6pu/xIvxyaTV
      /wpydjFjnFar2ckF76WH+P12P3ijds3n0/CqfBU+m1PukbNpyAoNR2+WL71vM7K2kE6wzNVj
      K1l1fhSbYkLx7KYhZcNcYi1XEa1Wo475BPu0AFk7mFzC5gSTa7+G6Fg1h/d9wCtGDbSTsoHp
      wbnYr4kmVh1L5DpPeksBqHdNx5ThhKjVqNWheHaTy86NtWRVtBq1OoZP7NMIWHmIMiA3bA7B
      ufasiY5FfXgfHzTUIFCuN4B3tn7L4UMbGHltNzHJgCaFDXNjsVwVjVqtJuYTe9ICViJLITti
      lZyKLIWcSfrvwxn+VDKyFHIWiSeMcRpadzz7vfB/6dm7V422cXEU7/l9jcGb4RxSq4nZswiH
      jvI5+W+pxGNrjPaccgmeE0bt7UY9X/2Ebw/HEvmxxLkVH3OgpD1OY0fAD7FURTkp6h8wHjG8
      5qLoakL3v7I5V2/4vt7Wknc+jeCgWo06Zjk2Py1jx8nb/y53tqscvQHvsPXbwxzaMJJru2NI
      bvAbb0YK9rCt3BPf2139NMOGmAMBEgcA2nakn0qrE6ylzGQ8S/3stFJDuSSeKOZ04WsMW19z
      vGnxJShI5MQFJ3wmmqEHoNDDQMFte5rcxBO09ghmopkeAHrG3eVjGihbfLqQ1+o2yCUKSDxx
      ASeficjVKNBrqEGgi2kfjPUAnsKwHVyVK+dE8WkKXxtGTe2mFF8CulkyyHQLqWnwMqf5eZAz
      K57ewKbTZYzqncwpbJhXL567dKkQRY+a/qgs9STJNm9xwFGrg9yuJybtIOt/TtB6VDAjTWR1
      5Bcnvo7Tth0kFkxG/ua78Gx3PRRARwtXnHp481MmjBjqjqexD5Gx01EOy0b9Qw9ctjceVLZq
      XcL+oED8zlzhujZt+G02ducmNm6XaR9j+bd6ypB28rfY4pz8KpSE6L9wiKidegDp8HR2hXq2
      rE6w8YvP19PZas/o1ZHMri++29yThtotjl5N5GxlvdivmRpsP5rVkbNvoyXcDSsbfd5LzMKt
      bRr9rd+mm5ENRd9nU3I9gSK7SfSud4SR0TNobv6neeyq5j/c1LTiiSdkm0a/Zsvnx+IpfSqN
      2AGjCW9UBbOE/csXkzlwK5EbzNBTFBDu610dyj0MDJ5/GPX8WglxIfgWeBPqKTv/PbwPYIrV
      YNi/NZS0KxpAQ3lRJglZJWDSi37t4znywyVuoKG8qICLDXQQpgPtuLFnDTuzy9Ggobwon8Iy
      wOBJ2vELOWdvgHafsancIKFpV9AAmvIiMhOyKMGEXv3aE3/kBy7dkNMLGmqwwdOxYjD72Roq
      ayGjKacoM4EsOfCn90A7yk59T2SyMUorBfS2wCwhlrCTZ3G0s7iluqef6cq5rJzquFjfcjBW
      pz5l7ZFL3ABuXD3Hxd+15x+1k29lAWTO7vyCw8/ZMbC6M7/ODa2u8sXvQvnmkhO22ub0HdwY
      nrKPkL2JSG4O1Jlu/+9F8luZ0bPOoFBBeTkYPt2Z1oobXMo8RfrtpkrcjV0PJvfQARQopyzH
      10jNQncHJEnFuDlbyCjXA4WSKUHOXFjjwTDJGZ9P4rnSUC0D3mbTe6Ycf9cVB8kBN79wssoB
      w2FM8nqcvdOGITm9w74iUCinsNzXCPVCdxwkCdW4OWzJKEcPBcopQThfWIPHMAlnn0+Ib6jB
      Bk9HyZTlvhipF+LuIAswz9mSQXlVPGZhjW1eBBFXzemtD2CBZfd97Dtly6ABt8ajhoPtsUhL
      J6NqJbLzKILXjefaFk+GSRLOHsuIvSKf/9o3H2PPVGckyZl3jpvy3qpJ1ASeJ1n3qgpJGobP
      zv/w+tq5DK260hVKRo69Qnz6QKR6NpSl/8RZWyvqumZXnF8fRcF6NxxUE1l6pJyODUyVGrer
      IWSR66pFgYJwX6SWXM4eGlDd+4NQiXyAKCbK35tE1yboExeE4+udh486gNtGpZorHFvhw5Zn
      VrJ7cu1Ls5iItyeT/8ZtwtNHHPEoxANDZ0ZMd+fcl3ub6W56PeJCkBzcWf/HZJZOqtsvl8Vt
      44sn3sRbxy5+gP8HE1u77O1w2pMAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
